// Code generated by protoc-gen-go. DO NOT EDIT.
// source: londopb/londo.proto

package londopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subject struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Certificate          string   `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey           string   `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	AltNames             []string `protobuf:"bytes,4,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
	Targets              []string `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{0}
}

func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (m *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(m, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Subject) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *Subject) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *Subject) GetAltNames() []string {
	if m != nil {
		return m.AltNames
	}
	return nil
}

func (m *Subject) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type GetSubjectRequest struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubjectRequest) Reset()         { *m = GetSubjectRequest{} }
func (m *GetSubjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubjectRequest) ProtoMessage()    {}
func (*GetSubjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{1}
}

func (m *GetSubjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubjectRequest.Unmarshal(m, b)
}
func (m *GetSubjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubjectRequest.Marshal(b, m, deterministic)
}
func (m *GetSubjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubjectRequest.Merge(m, src)
}
func (m *GetSubjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubjectRequest.Size(m)
}
func (m *GetSubjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubjectRequest proto.InternalMessageInfo

func (m *GetSubjectRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type TargetRequest struct {
	Target               []string `protobuf:"bytes,1,rep,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TargetRequest) Reset()         { *m = TargetRequest{} }
func (m *TargetRequest) String() string { return proto.CompactTextString(m) }
func (*TargetRequest) ProtoMessage()    {}
func (*TargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{2}
}

func (m *TargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetRequest.Unmarshal(m, b)
}
func (m *TargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetRequest.Marshal(b, m, deterministic)
}
func (m *TargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetRequest.Merge(m, src)
}
func (m *TargetRequest) XXX_Size() int {
	return xxx_messageInfo_TargetRequest.Size(m)
}
func (m *TargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TargetRequest proto.InternalMessageInfo

func (m *TargetRequest) GetTarget() []string {
	if m != nil {
		return m.Target
	}
	return nil
}

type ForTargetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForTargetRequest) Reset()         { *m = ForTargetRequest{} }
func (m *ForTargetRequest) String() string { return proto.CompactTextString(m) }
func (*ForTargetRequest) ProtoMessage()    {}
func (*ForTargetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{3}
}

func (m *ForTargetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForTargetRequest.Unmarshal(m, b)
}
func (m *ForTargetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForTargetRequest.Marshal(b, m, deterministic)
}
func (m *ForTargetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForTargetRequest.Merge(m, src)
}
func (m *ForTargetRequest) XXX_Size() int {
	return xxx_messageInfo_ForTargetRequest.Size(m)
}
func (m *ForTargetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForTargetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForTargetRequest proto.InternalMessageInfo

type GetSubjectResponse struct {
	Subject              *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubjectResponse) Reset()         { *m = GetSubjectResponse{} }
func (m *GetSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubjectResponse) ProtoMessage()    {}
func (*GetSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{4}
}

func (m *GetSubjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubjectResponse.Unmarshal(m, b)
}
func (m *GetSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubjectResponse.Marshal(b, m, deterministic)
}
func (m *GetSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubjectResponse.Merge(m, src)
}
func (m *GetSubjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubjectResponse.Size(m)
}
func (m *GetSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubjectResponse proto.InternalMessageInfo

func (m *GetSubjectResponse) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

// New Subject
type NewSubject struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	AltNames             []string `protobuf:"bytes,2,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
	Targets              []string `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewSubject) Reset()         { *m = NewSubject{} }
func (m *NewSubject) String() string { return proto.CompactTextString(m) }
func (*NewSubject) ProtoMessage()    {}
func (*NewSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{5}
}

func (m *NewSubject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewSubject.Unmarshal(m, b)
}
func (m *NewSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewSubject.Marshal(b, m, deterministic)
}
func (m *NewSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewSubject.Merge(m, src)
}
func (m *NewSubject) XXX_Size() int {
	return xxx_messageInfo_NewSubject.Size(m)
}
func (m *NewSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_NewSubject.DiscardUnknown(m)
}

var xxx_messageInfo_NewSubject proto.InternalMessageInfo

func (m *NewSubject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *NewSubject) GetAltNames() []string {
	if m != nil {
		return m.AltNames
	}
	return nil
}

func (m *NewSubject) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type AddNewSubjectRequest struct {
	Subject              *NewSubject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AddNewSubjectRequest) Reset()         { *m = AddNewSubjectRequest{} }
func (m *AddNewSubjectRequest) String() string { return proto.CompactTextString(m) }
func (*AddNewSubjectRequest) ProtoMessage()    {}
func (*AddNewSubjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{6}
}

func (m *AddNewSubjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNewSubjectRequest.Unmarshal(m, b)
}
func (m *AddNewSubjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNewSubjectRequest.Marshal(b, m, deterministic)
}
func (m *AddNewSubjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNewSubjectRequest.Merge(m, src)
}
func (m *AddNewSubjectRequest) XXX_Size() int {
	return xxx_messageInfo_AddNewSubjectRequest.Size(m)
}
func (m *AddNewSubjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNewSubjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNewSubjectRequest proto.InternalMessageInfo

func (m *AddNewSubjectRequest) GetSubject() *NewSubject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type AddNewSubjectResponse struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNewSubjectResponse) Reset()         { *m = AddNewSubjectResponse{} }
func (m *AddNewSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*AddNewSubjectResponse) ProtoMessage()    {}
func (*AddNewSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{7}
}

func (m *AddNewSubjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNewSubjectResponse.Unmarshal(m, b)
}
func (m *AddNewSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNewSubjectResponse.Marshal(b, m, deterministic)
}
func (m *AddNewSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNewSubjectResponse.Merge(m, src)
}
func (m *AddNewSubjectResponse) XXX_Size() int {
	return xxx_messageInfo_AddNewSubjectResponse.Size(m)
}
func (m *AddNewSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNewSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNewSubjectResponse proto.InternalMessageInfo

func (m *AddNewSubjectResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

// Delete Subject
type DeleteSubjectRequest struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubjectRequest) Reset()         { *m = DeleteSubjectRequest{} }
func (m *DeleteSubjectRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubjectRequest) ProtoMessage()    {}
func (*DeleteSubjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{8}
}

func (m *DeleteSubjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubjectRequest.Unmarshal(m, b)
}
func (m *DeleteSubjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubjectRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubjectRequest.Merge(m, src)
}
func (m *DeleteSubjectRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubjectRequest.Size(m)
}
func (m *DeleteSubjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubjectRequest proto.InternalMessageInfo

func (m *DeleteSubjectRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type DeleteSubjectResponse struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubjectResponse) Reset()         { *m = DeleteSubjectResponse{} }
func (m *DeleteSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSubjectResponse) ProtoMessage()    {}
func (*DeleteSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{9}
}

func (m *DeleteSubjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubjectResponse.Unmarshal(m, b)
}
func (m *DeleteSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubjectResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubjectResponse.Merge(m, src)
}
func (m *DeleteSubjectResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSubjectResponse.Size(m)
}
func (m *DeleteSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubjectResponse proto.InternalMessageInfo

func (m *DeleteSubjectResponse) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

// Get expiring subjects
type ExpiringSubject struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	ExpDate              int64    `protobuf:"varint,2,opt,name=exp_date,json=expDate,proto3" json:"exp_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpiringSubject) Reset()         { *m = ExpiringSubject{} }
func (m *ExpiringSubject) String() string { return proto.CompactTextString(m) }
func (*ExpiringSubject) ProtoMessage()    {}
func (*ExpiringSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{10}
}

func (m *ExpiringSubject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpiringSubject.Unmarshal(m, b)
}
func (m *ExpiringSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpiringSubject.Marshal(b, m, deterministic)
}
func (m *ExpiringSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpiringSubject.Merge(m, src)
}
func (m *ExpiringSubject) XXX_Size() int {
	return xxx_messageInfo_ExpiringSubject.Size(m)
}
func (m *ExpiringSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpiringSubject.DiscardUnknown(m)
}

var xxx_messageInfo_ExpiringSubject proto.InternalMessageInfo

func (m *ExpiringSubject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *ExpiringSubject) GetExpDate() int64 {
	if m != nil {
		return m.ExpDate
	}
	return 0
}

type GetExpiringSubjectsRequest struct {
	Days                 int32    `protobuf:"varint,1,opt,name=days,proto3" json:"days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExpiringSubjectsRequest) Reset()         { *m = GetExpiringSubjectsRequest{} }
func (m *GetExpiringSubjectsRequest) String() string { return proto.CompactTextString(m) }
func (*GetExpiringSubjectsRequest) ProtoMessage()    {}
func (*GetExpiringSubjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{11}
}

func (m *GetExpiringSubjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExpiringSubjectsRequest.Unmarshal(m, b)
}
func (m *GetExpiringSubjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExpiringSubjectsRequest.Marshal(b, m, deterministic)
}
func (m *GetExpiringSubjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExpiringSubjectsRequest.Merge(m, src)
}
func (m *GetExpiringSubjectsRequest) XXX_Size() int {
	return xxx_messageInfo_GetExpiringSubjectsRequest.Size(m)
}
func (m *GetExpiringSubjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExpiringSubjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExpiringSubjectsRequest proto.InternalMessageInfo

func (m *GetExpiringSubjectsRequest) GetDays() int32 {
	if m != nil {
		return m.Days
	}
	return 0
}

type GetExpringSubjectsResponse struct {
	Subject              *ExpiringSubject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetExpringSubjectsResponse) Reset()         { *m = GetExpringSubjectsResponse{} }
func (m *GetExpringSubjectsResponse) String() string { return proto.CompactTextString(m) }
func (*GetExpringSubjectsResponse) ProtoMessage()    {}
func (*GetExpringSubjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{12}
}

func (m *GetExpringSubjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExpringSubjectsResponse.Unmarshal(m, b)
}
func (m *GetExpringSubjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExpringSubjectsResponse.Marshal(b, m, deterministic)
}
func (m *GetExpringSubjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExpringSubjectsResponse.Merge(m, src)
}
func (m *GetExpringSubjectsResponse) XXX_Size() int {
	return xxx_messageInfo_GetExpringSubjectsResponse.Size(m)
}
func (m *GetExpringSubjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExpringSubjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetExpringSubjectsResponse proto.InternalMessageInfo

func (m *GetExpringSubjectsResponse) GetSubject() *ExpiringSubject {
	if m != nil {
		return m.Subject
	}
	return nil
}

// New Token
type JWTToken struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JWTToken) Reset()         { *m = JWTToken{} }
func (m *JWTToken) String() string { return proto.CompactTextString(m) }
func (*JWTToken) ProtoMessage()    {}
func (*JWTToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{13}
}

func (m *JWTToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWTToken.Unmarshal(m, b)
}
func (m *JWTToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWTToken.Marshal(b, m, deterministic)
}
func (m *JWTToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWTToken.Merge(m, src)
}
func (m *JWTToken) XXX_Size() int {
	return xxx_messageInfo_JWTToken.Size(m)
}
func (m *JWTToken) XXX_DiscardUnknown() {
	xxx_messageInfo_JWTToken.DiscardUnknown(m)
}

var xxx_messageInfo_JWTToken proto.InternalMessageInfo

func (m *JWTToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetTokenRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenRequest) Reset()         { *m = GetTokenRequest{} }
func (m *GetTokenRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenRequest) ProtoMessage()    {}
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{14}
}

func (m *GetTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenRequest.Unmarshal(m, b)
}
func (m *GetTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenRequest.Merge(m, src)
}
func (m *GetTokenRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenRequest.Size(m)
}
func (m *GetTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenRequest proto.InternalMessageInfo

type GetTokenResponse struct {
	Token                *JWTToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetTokenResponse) Reset()         { *m = GetTokenResponse{} }
func (m *GetTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenResponse) ProtoMessage()    {}
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{15}
}

func (m *GetTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenResponse.Unmarshal(m, b)
}
func (m *GetTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenResponse.Merge(m, src)
}
func (m *GetTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenResponse.Size(m)
}
func (m *GetTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenResponse proto.InternalMessageInfo

func (m *GetTokenResponse) GetToken() *JWTToken {
	if m != nil {
		return m.Token
	}
	return nil
}

func init() {
	proto.RegisterType((*Subject)(nil), "londoapi.v1.Subject")
	proto.RegisterType((*GetSubjectRequest)(nil), "londoapi.v1.GetSubjectRequest")
	proto.RegisterType((*TargetRequest)(nil), "londoapi.v1.TargetRequest")
	proto.RegisterType((*ForTargetRequest)(nil), "londoapi.v1.ForTargetRequest")
	proto.RegisterType((*GetSubjectResponse)(nil), "londoapi.v1.GetSubjectResponse")
	proto.RegisterType((*NewSubject)(nil), "londoapi.v1.NewSubject")
	proto.RegisterType((*AddNewSubjectRequest)(nil), "londoapi.v1.AddNewSubjectRequest")
	proto.RegisterType((*AddNewSubjectResponse)(nil), "londoapi.v1.AddNewSubjectResponse")
	proto.RegisterType((*DeleteSubjectRequest)(nil), "londoapi.v1.DeleteSubjectRequest")
	proto.RegisterType((*DeleteSubjectResponse)(nil), "londoapi.v1.DeleteSubjectResponse")
	proto.RegisterType((*ExpiringSubject)(nil), "londoapi.v1.ExpiringSubject")
	proto.RegisterType((*GetExpiringSubjectsRequest)(nil), "londoapi.v1.GetExpiringSubjectsRequest")
	proto.RegisterType((*GetExpringSubjectsResponse)(nil), "londoapi.v1.GetExpringSubjectsResponse")
	proto.RegisterType((*JWTToken)(nil), "londoapi.v1.JWTToken")
	proto.RegisterType((*GetTokenRequest)(nil), "londoapi.v1.GetTokenRequest")
	proto.RegisterType((*GetTokenResponse)(nil), "londoapi.v1.GetTokenResponse")
}

func init() { proto.RegisterFile("londopb/londo.proto", fileDescriptor_f3d42104e625ed99) }

var fileDescriptor_f3d42104e625ed99 = []byte{
	// 565 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x9b, 0xa4, 0x49, 0xc6, 0x8a, 0xda, 0x6e, 0x13, 0x30, 0xa6, 0xa5, 0xc1, 0x97, 0x56,
	0x42, 0x84, 0x24, 0x48, 0x5c, 0x11, 0x25, 0x34, 0x02, 0x44, 0x0f, 0xa9, 0xd5, 0x4a, 0x48, 0x28,
	0x72, 0xe2, 0xa1, 0x98, 0x06, 0xdb, 0xd8, 0xdb, 0x90, 0x7c, 0x0c, 0xbf, 0xc8, 0x37, 0xa0, 0xac,
	0x77, 0x63, 0xef, 0xd6, 0x6e, 0x7a, 0xea, 0xce, 0xee, 0xbc, 0x37, 0x6f, 0x5e, 0x67, 0x62, 0xd8,
	0x9f, 0x05, 0xbe, 0x1b, 0x84, 0x93, 0x57, 0xec, 0x6f, 0x27, 0x8c, 0x02, 0x1a, 0x10, 0x9d, 0x05,
	0x4e, 0xe8, 0x75, 0xe6, 0x3d, 0xeb, 0xaf, 0x06, 0xd5, 0x8b, 0xdb, 0xc9, 0x4f, 0x9c, 0x52, 0x62,
	0x40, 0x35, 0x4e, 0x8e, 0x86, 0xd6, 0xd6, 0x4e, 0xea, 0x23, 0x11, 0x92, 0x36, 0xe8, 0x53, 0x8c,
	0xa8, 0xf7, 0xdd, 0x9b, 0x3a, 0x14, 0x8d, 0x2d, 0xf6, 0x9a, 0xbd, 0x22, 0x47, 0xa0, 0x87, 0x91,
	0x37, 0x77, 0x28, 0x8e, 0x6f, 0x70, 0x69, 0x94, 0x58, 0x06, 0xf0, 0xab, 0xcf, 0xb8, 0x24, 0x4f,
	0xa1, 0xee, 0xcc, 0xe8, 0xd8, 0x77, 0x7e, 0x61, 0x6c, 0x94, 0xdb, 0xa5, 0x93, 0xfa, 0xa8, 0xe6,
	0xcc, 0xe8, 0xf9, 0x2a, 0x5e, 0x55, 0xa6, 0x4e, 0x74, 0x8d, 0x34, 0x36, 0x2a, 0xec, 0x49, 0x84,
	0xd6, 0x4b, 0xd8, 0x1b, 0x22, 0xe5, 0x0a, 0x47, 0xf8, 0xfb, 0x16, 0xe3, 0x7b, 0x84, 0x5a, 0xc7,
	0xd0, 0xb0, 0x19, 0x52, 0xa4, 0x3e, 0x82, 0xed, 0x84, 0xca, 0xd0, 0x18, 0x31, 0x8f, 0x2c, 0x02,
	0xbb, 0x67, 0x41, 0x24, 0xe5, 0x5a, 0x03, 0x20, 0xd9, 0x5a, 0x71, 0x18, 0xf8, 0x31, 0x92, 0x8e,
	0x5c, 0x4c, 0xef, 0x37, 0x3b, 0x19, 0x03, 0x3b, 0x22, 0x7d, 0x2d, 0xe1, 0x1b, 0xc0, 0x39, 0xfe,
	0xd9, 0xec, 0xa9, 0x64, 0xc8, 0x56, 0xb1, 0x21, 0x25, 0xd9, 0x90, 0x8f, 0xd0, 0x7c, 0xe7, 0xba,
	0x69, 0x05, 0xd1, 0x68, 0x4f, 0x95, 0xf9, 0x58, 0x92, 0x99, 0x01, 0xac, 0x95, 0xf6, 0xa0, 0xa5,
	0x50, 0xf1, 0x96, 0x8b, 0xfd, 0xed, 0x42, 0x73, 0x80, 0x33, 0xa4, 0xf8, 0xe0, 0xff, 0x48, 0x0f,
	0x5a, 0x0a, 0x62, 0x63, 0x91, 0x33, 0xd8, 0xf9, 0xb0, 0x08, 0xbd, 0xc8, 0xf3, 0xaf, 0x37, 0xdb,
	0xf8, 0x04, 0x6a, 0xb8, 0x08, 0xc7, 0xae, 0x98, 0xcb, 0xd2, 0xa8, 0x8a, 0x8b, 0x70, 0xe0, 0x50,
	0xb4, 0xba, 0x60, 0x0e, 0x91, 0x2a, 0x54, 0xb1, 0x90, 0x4c, 0xa0, 0xec, 0x3a, 0xcb, 0x98, 0xf1,
	0x55, 0x46, 0xec, 0x6c, 0xd9, 0x02, 0x21, 0x03, 0xb8, 0xe2, 0x37, 0xaa, 0xc5, 0x07, 0x92, 0xc5,
	0x4a, 0xa1, 0xb4, 0x9f, 0x36, 0xd4, 0x3e, 0x5d, 0xd9, 0x76, 0x70, 0x83, 0x3e, 0x69, 0x42, 0x85,
	0xae, 0x0e, 0xbc, 0x8d, 0x24, 0xb0, 0xf6, 0x60, 0x67, 0x88, 0x94, 0x65, 0x88, 0x61, 0x7c, 0x0b,
	0xbb, 0xe9, 0x15, 0x17, 0xf0, 0x22, 0x0b, 0xd6, 0xfb, 0x2d, 0xa9, 0xbc, 0x28, 0xc1, 0x39, 0xfb,
	0xff, 0xca, 0xa0, 0xbf, 0xc7, 0x88, 0x5e, 0x60, 0x34, 0xf7, 0xa6, 0x48, 0xbe, 0x00, 0xa4, 0xd3,
	0x4d, 0x9e, 0x49, 0xd8, 0x3b, 0x2b, 0x66, 0x1e, 0x15, 0xbe, 0x73, 0x2d, 0x36, 0xec, 0xa7, 0xb7,
	0xf1, 0xe9, 0x32, 0x59, 0x25, 0x62, 0x4a, 0x38, 0x69, 0xbf, 0x36, 0x72, 0x76, 0x35, 0x72, 0x95,
	0x65, 0x5d, 0x2f, 0x28, 0x39, 0x94, 0x90, 0xea, 0xe2, 0x3e, 0x84, 0xf8, 0x12, 0x1a, 0xd2, 0xac,
	0x93, 0xe7, 0x12, 0x26, 0x6f, 0xa5, 0x4c, 0xeb, 0xbe, 0x14, 0x6e, 0xc3, 0x25, 0x34, 0xa4, 0xf1,
	0x56, 0x78, 0xf3, 0x96, 0x45, 0xe1, 0xcd, 0xdf, 0x8e, 0x1f, 0xec, 0xb7, 0x48, 0x5d, 0x83, 0x63,
	0xb5, 0xd1, 0x82, 0xe1, 0x36, 0xf3, 0x12, 0xf3, 0x66, 0xba, 0xab, 0x91, 0x21, 0xd4, 0xc4, 0xa0,
	0x91, 0x03, 0x15, 0x96, 0x1d, 0x49, 0xf3, 0xb0, 0xe0, 0x35, 0xa1, 0x3a, 0xad, 0x7f, 0xad, 0xf2,
	0xcf, 0xcd, 0x64, 0x9b, 0x7d, 0x69, 0x5e, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xef, 0x37, 0x76,
	0x57, 0x80, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CertServiceClient is the client API for CertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertServiceClient interface {
	GetSubject(ctx context.Context, in *GetSubjectRequest, opts ...grpc.CallOption) (*GetSubjectResponse, error)
	GetSubjectsByTarget(ctx context.Context, in *TargetRequest, opts ...grpc.CallOption) (CertService_GetSubjectsByTargetClient, error)
	// Response is determined by requester's IP address
	GetSubjectForTarget(ctx context.Context, in *ForTargetRequest, opts ...grpc.CallOption) (CertService_GetSubjectForTargetClient, error)
	AddNewSubject(ctx context.Context, in *AddNewSubjectRequest, opts ...grpc.CallOption) (*AddNewSubjectResponse, error)
	DeleteSubject(ctx context.Context, in *DeleteSubjectRequest, opts ...grpc.CallOption) (*DeleteSubjectResponse, error)
	GetExpiringSubject(ctx context.Context, in *GetExpiringSubjectsRequest, opts ...grpc.CallOption) (CertService_GetExpiringSubjectClient, error)
	GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error)
}

type certServiceClient struct {
	cc *grpc.ClientConn
}

func NewCertServiceClient(cc *grpc.ClientConn) CertServiceClient {
	return &certServiceClient{cc}
}

func (c *certServiceClient) GetSubject(ctx context.Context, in *GetSubjectRequest, opts ...grpc.CallOption) (*GetSubjectResponse, error) {
	out := new(GetSubjectResponse)
	err := c.cc.Invoke(ctx, "/londoapi.v1.CertService/GetSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certServiceClient) GetSubjectsByTarget(ctx context.Context, in *TargetRequest, opts ...grpc.CallOption) (CertService_GetSubjectsByTargetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CertService_serviceDesc.Streams[0], "/londoapi.v1.CertService/GetSubjectsByTarget", opts...)
	if err != nil {
		return nil, err
	}
	x := &certServiceGetSubjectsByTargetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CertService_GetSubjectsByTargetClient interface {
	Recv() (*GetSubjectResponse, error)
	grpc.ClientStream
}

type certServiceGetSubjectsByTargetClient struct {
	grpc.ClientStream
}

func (x *certServiceGetSubjectsByTargetClient) Recv() (*GetSubjectResponse, error) {
	m := new(GetSubjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *certServiceClient) GetSubjectForTarget(ctx context.Context, in *ForTargetRequest, opts ...grpc.CallOption) (CertService_GetSubjectForTargetClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CertService_serviceDesc.Streams[1], "/londoapi.v1.CertService/GetSubjectForTarget", opts...)
	if err != nil {
		return nil, err
	}
	x := &certServiceGetSubjectForTargetClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CertService_GetSubjectForTargetClient interface {
	Recv() (*GetSubjectResponse, error)
	grpc.ClientStream
}

type certServiceGetSubjectForTargetClient struct {
	grpc.ClientStream
}

func (x *certServiceGetSubjectForTargetClient) Recv() (*GetSubjectResponse, error) {
	m := new(GetSubjectResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *certServiceClient) AddNewSubject(ctx context.Context, in *AddNewSubjectRequest, opts ...grpc.CallOption) (*AddNewSubjectResponse, error) {
	out := new(AddNewSubjectResponse)
	err := c.cc.Invoke(ctx, "/londoapi.v1.CertService/AddNewSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certServiceClient) DeleteSubject(ctx context.Context, in *DeleteSubjectRequest, opts ...grpc.CallOption) (*DeleteSubjectResponse, error) {
	out := new(DeleteSubjectResponse)
	err := c.cc.Invoke(ctx, "/londoapi.v1.CertService/DeleteSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certServiceClient) GetExpiringSubject(ctx context.Context, in *GetExpiringSubjectsRequest, opts ...grpc.CallOption) (CertService_GetExpiringSubjectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CertService_serviceDesc.Streams[2], "/londoapi.v1.CertService/GetExpiringSubject", opts...)
	if err != nil {
		return nil, err
	}
	x := &certServiceGetExpiringSubjectClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CertService_GetExpiringSubjectClient interface {
	Recv() (*GetExpringSubjectsResponse, error)
	grpc.ClientStream
}

type certServiceGetExpiringSubjectClient struct {
	grpc.ClientStream
}

func (x *certServiceGetExpiringSubjectClient) Recv() (*GetExpringSubjectsResponse, error) {
	m := new(GetExpringSubjectsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *certServiceClient) GetToken(ctx context.Context, in *GetTokenRequest, opts ...grpc.CallOption) (*GetTokenResponse, error) {
	out := new(GetTokenResponse)
	err := c.cc.Invoke(ctx, "/londoapi.v1.CertService/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertServiceServer is the server API for CertService service.
type CertServiceServer interface {
	GetSubject(context.Context, *GetSubjectRequest) (*GetSubjectResponse, error)
	GetSubjectsByTarget(*TargetRequest, CertService_GetSubjectsByTargetServer) error
	// Response is determined by requester's IP address
	GetSubjectForTarget(*ForTargetRequest, CertService_GetSubjectForTargetServer) error
	AddNewSubject(context.Context, *AddNewSubjectRequest) (*AddNewSubjectResponse, error)
	DeleteSubject(context.Context, *DeleteSubjectRequest) (*DeleteSubjectResponse, error)
	GetExpiringSubject(*GetExpiringSubjectsRequest, CertService_GetExpiringSubjectServer) error
	GetToken(context.Context, *GetTokenRequest) (*GetTokenResponse, error)
}

func RegisterCertServiceServer(s *grpc.Server, srv CertServiceServer) {
	s.RegisterService(&_CertService_serviceDesc, srv)
}

func _CertService_GetSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).GetSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/londoapi.v1.CertService/GetSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).GetSubject(ctx, req.(*GetSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertService_GetSubjectsByTarget_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TargetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CertServiceServer).GetSubjectsByTarget(m, &certServiceGetSubjectsByTargetServer{stream})
}

type CertService_GetSubjectsByTargetServer interface {
	Send(*GetSubjectResponse) error
	grpc.ServerStream
}

type certServiceGetSubjectsByTargetServer struct {
	grpc.ServerStream
}

func (x *certServiceGetSubjectsByTargetServer) Send(m *GetSubjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CertService_GetSubjectForTarget_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ForTargetRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CertServiceServer).GetSubjectForTarget(m, &certServiceGetSubjectForTargetServer{stream})
}

type CertService_GetSubjectForTargetServer interface {
	Send(*GetSubjectResponse) error
	grpc.ServerStream
}

type certServiceGetSubjectForTargetServer struct {
	grpc.ServerStream
}

func (x *certServiceGetSubjectForTargetServer) Send(m *GetSubjectResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CertService_AddNewSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNewSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).AddNewSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/londoapi.v1.CertService/AddNewSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).AddNewSubject(ctx, req.(*AddNewSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertService_DeleteSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).DeleteSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/londoapi.v1.CertService/DeleteSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).DeleteSubject(ctx, req.(*DeleteSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertService_GetExpiringSubject_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetExpiringSubjectsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CertServiceServer).GetExpiringSubject(m, &certServiceGetExpiringSubjectServer{stream})
}

type CertService_GetExpiringSubjectServer interface {
	Send(*GetExpringSubjectsResponse) error
	grpc.ServerStream
}

type certServiceGetExpiringSubjectServer struct {
	grpc.ServerStream
}

func (x *certServiceGetExpiringSubjectServer) Send(m *GetExpringSubjectsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CertService_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/londoapi.v1.CertService/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).GetToken(ctx, req.(*GetTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "londoapi.v1.CertService",
	HandlerType: (*CertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSubject",
			Handler:    _CertService_GetSubject_Handler,
		},
		{
			MethodName: "AddNewSubject",
			Handler:    _CertService_AddNewSubject_Handler,
		},
		{
			MethodName: "DeleteSubject",
			Handler:    _CertService_DeleteSubject_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _CertService_GetToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetSubjectsByTarget",
			Handler:       _CertService_GetSubjectsByTarget_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSubjectForTarget",
			Handler:       _CertService_GetSubjectForTarget_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetExpiringSubject",
			Handler:       _CertService_GetExpiringSubject_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "londopb/londo.proto",
}
