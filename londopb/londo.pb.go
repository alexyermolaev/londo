// Code generated by protoc-gen-go. DO NOT EDIT.
// source: londopb/londo.proto

package londopb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Subject struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Certificate          string   `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
	PrivateKey           string   `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	AltNames             []string `protobuf:"bytes,4,rep,name=alt_names,json=altNames,proto3" json:"alt_names,omitempty"`
	Targets              []string `protobuf:"bytes,5,rep,name=targets,proto3" json:"targets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{0}
}

func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (m *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(m, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Subject) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *Subject) GetPrivateKey() string {
	if m != nil {
		return m.PrivateKey
	}
	return ""
}

func (m *Subject) GetAltNames() []string {
	if m != nil {
		return m.AltNames
	}
	return nil
}

func (m *Subject) GetTargets() []string {
	if m != nil {
		return m.Targets
	}
	return nil
}

type GetSubjectRequest struct {
	Subject              string   `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubjectRequest) Reset()         { *m = GetSubjectRequest{} }
func (m *GetSubjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetSubjectRequest) ProtoMessage()    {}
func (*GetSubjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{1}
}

func (m *GetSubjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubjectRequest.Unmarshal(m, b)
}
func (m *GetSubjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubjectRequest.Marshal(b, m, deterministic)
}
func (m *GetSubjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubjectRequest.Merge(m, src)
}
func (m *GetSubjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetSubjectRequest.Size(m)
}
func (m *GetSubjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubjectRequest proto.InternalMessageInfo

func (m *GetSubjectRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

type GetSubjectResponse struct {
	Subject              *Subject `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSubjectResponse) Reset()         { *m = GetSubjectResponse{} }
func (m *GetSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetSubjectResponse) ProtoMessage()    {}
func (*GetSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3d42104e625ed99, []int{2}
}

func (m *GetSubjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSubjectResponse.Unmarshal(m, b)
}
func (m *GetSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSubjectResponse.Marshal(b, m, deterministic)
}
func (m *GetSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSubjectResponse.Merge(m, src)
}
func (m *GetSubjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetSubjectResponse.Size(m)
}
func (m *GetSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSubjectResponse proto.InternalMessageInfo

func (m *GetSubjectResponse) GetSubject() *Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

func init() {
	proto.RegisterType((*Subject)(nil), "londoapi.v1.Subject")
	proto.RegisterType((*GetSubjectRequest)(nil), "londoapi.v1.GetSubjectRequest")
	proto.RegisterType((*GetSubjectResponse)(nil), "londoapi.v1.GetSubjectResponse")
}

func init() { proto.RegisterFile("londopb/londo.proto", fileDescriptor_f3d42104e625ed99) }

var fileDescriptor_f3d42104e625ed99 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xa9, 0xab, 0xd6, 0x4e, 0x4f, 0x8e, 0x1e, 0x82, 0x82, 0x5b, 0x7a, 0xda, 0x8b, 0x11,
	0xd7, 0x7f, 0xa0, 0x82, 0x07, 0xd1, 0x43, 0xf7, 0x26, 0xc2, 0x92, 0xd6, 0x51, 0xa2, 0xb5, 0x89,
	0xc9, 0x6c, 0x61, 0x7f, 0x8c, 0xff, 0x55, 0x36, 0xdb, 0x62, 0x17, 0x71, 0x4f, 0xc9, 0x9b, 0xf7,
	0x25, 0x79, 0xe4, 0xc1, 0x51, 0x6d, 0x9a, 0x17, 0x63, 0xcb, 0x8b, 0xb0, 0x4a, 0xeb, 0x0c, 0x1b,
	0x4c, 0x83, 0x50, 0x56, 0xcb, 0xf6, 0x32, 0xff, 0x8e, 0x20, 0x9e, 0x2d, 0xca, 0x77, 0xaa, 0x18,
	0x05, 0xc4, 0x7e, 0xbd, 0x15, 0x51, 0x16, 0x4d, 0x92, 0xa2, 0x97, 0x98, 0x41, 0x5a, 0x91, 0x63,
	0xfd, 0xaa, 0x2b, 0xc5, 0x24, 0x76, 0x82, 0x3b, 0x1c, 0xe1, 0x18, 0x52, 0xeb, 0x74, 0xab, 0x98,
	0xe6, 0x1f, 0xb4, 0x14, 0xa3, 0x40, 0x40, 0x37, 0xba, 0xa7, 0x25, 0x9e, 0x42, 0xa2, 0x6a, 0x9e,
	0x37, 0xea, 0x93, 0xbc, 0xd8, 0xcd, 0x46, 0x93, 0xa4, 0x38, 0x50, 0x35, 0x3f, 0xae, 0xf4, 0xea,
	0x65, 0x56, 0xee, 0x8d, 0xd8, 0x8b, 0xbd, 0x60, 0xf5, 0x32, 0x3f, 0x87, 0xc3, 0x3b, 0xe2, 0x2e,
	0x61, 0x41, 0x5f, 0x0b, 0xf2, 0x5b, 0x82, 0xe6, 0xb7, 0x80, 0x43, 0xdc, 0x5b, 0xd3, 0x78, 0x42,
	0xb9, 0xc9, 0xa7, 0xd3, 0x63, 0x39, 0xf8, 0x03, 0xd9, 0xe3, 0x3d, 0x34, 0x7d, 0x86, 0xf4, 0x86,
	0x1c, 0xcf, 0xc8, 0xb5, 0xba, 0x22, 0x7c, 0x00, 0xf8, 0xbd, 0x14, 0xcf, 0x36, 0xce, 0xfe, 0x09,
	0x77, 0x32, 0xfe, 0xd7, 0x5f, 0xa7, 0xb9, 0x4e, 0x9e, 0xe2, 0xae, 0x96, 0x72, 0x3f, 0x34, 0x72,
	0xf5, 0x13, 0x00, 0x00, 0xff, 0xff, 0x23, 0x8b, 0xbb, 0x22, 0xa8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CertServiceClient is the client API for CertService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertServiceClient interface {
	GetSubject(ctx context.Context, in *GetSubjectRequest, opts ...grpc.CallOption) (*GetSubjectResponse, error)
}

type certServiceClient struct {
	cc *grpc.ClientConn
}

func NewCertServiceClient(cc *grpc.ClientConn) CertServiceClient {
	return &certServiceClient{cc}
}

func (c *certServiceClient) GetSubject(ctx context.Context, in *GetSubjectRequest, opts ...grpc.CallOption) (*GetSubjectResponse, error) {
	out := new(GetSubjectResponse)
	err := c.cc.Invoke(ctx, "/londoapi.v1.CertService/GetSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CertServiceServer is the server API for CertService service.
type CertServiceServer interface {
	GetSubject(context.Context, *GetSubjectRequest) (*GetSubjectResponse, error)
}

func RegisterCertServiceServer(s *grpc.Server, srv CertServiceServer) {
	s.RegisterService(&_CertService_serviceDesc, srv)
}

func _CertService_GetSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertServiceServer).GetSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/londoapi.v1.CertService/GetSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertServiceServer).GetSubject(ctx, req.(*GetSubjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CertService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "londoapi.v1.CertService",
	HandlerType: (*CertServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSubject",
			Handler:    _CertService_GetSubject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "londopb/londo.proto",
}
