syntax = "proto3";

package londoapi.v1;
option go_package = "londopb";

message Subject {
    string subject = 1;
    string certificate = 2;
    string private_key = 3;
    repeated string alt_names = 4;
    repeated string targets = 5;
}

message GetSubjectRequest {
    string subject = 1;
}

message TargetRequest {
    repeated string target = 1;
}

message ForTargetRequest {}

message GetSubjectResponse {
    Subject subject = 1;
}

// New Subject
message NewSubject {
    string subject = 1;
    repeated string alt_names = 2;
    repeated string targets = 3;
}

message AddNewSubjectRequest {
    NewSubject subject = 1;
}

message AddNewSubjectResponse {
    string subject = 1;
}

// Delete Subject
message DeleteSubjectRequest {
    string subject = 1;
}

message DeleteSubjectResponse {
    string subject = 1;
}

// Get expiring subjects
message ExpiringSubject {
    string subject = 1;
    int64 exp_date = 2;
}

message GetExpiringSubjectsRequest {
    int32 days = 1;
}

message GetExpringSubjectsResponse {
    ExpiringSubject subject = 1;
}

// New Token
message JWTToken {
    string token = 1;
}

message GetTokenRequest {}

message GetTokenResponse {
    JWTToken token = 1;
}


service CertService {
    rpc GetSubject (GetSubjectRequest) returns (GetSubjectResponse);
    rpc GetSubjectsByTarget (TargetRequest) returns (stream GetSubjectResponse);

    // Response is determined by requester's IP address
    rpc GetSubjectForTarget (ForTargetRequest) returns (stream GetSubjectResponse);

    rpc AddNewSubject (AddNewSubjectRequest) returns (AddNewSubjectResponse);
    rpc DeleteSubject (DeleteSubjectRequest) returns (DeleteSubjectResponse);

    rpc GetExpiringSubject (GetExpiringSubjectsRequest) returns (stream GetExpringSubjectsResponse);

    rpc GetToken (GetTokenRequest) returns (GetTokenResponse);
}

